#<begin_chunk>```{r, clr,include=FALSE,eval=TRUE}
clr_vec <- function(x){
log(x) - mean(log(x))
}
clr_mat <- function(X){
.res <- t(apply(X, 1, clr_vec))
stopifnot(dim(.res) == dim(X))
.res
}
natgen_clr <- clr_mat(natgen_renormalised)
org_clr <- clr_mat(org)
org_clr_robustzeroes <- as(compositions::clr(org), 'matrix')
rownames(org_clr_robustzeroes) <- rownames(org_clr) <- paste0('Organoid ', rownames(org_clr))
#<end_chunk>
#<begin_chunk>```{r, cols,include=FALSE}
n <- 60
qual_col_pals = brewer.pal.info[brewer.pal.info$category == 'qual',]
col_vector = unique(unlist(mapply(brewer.pal, qual_col_pals$maxcolors, rownames(qual_col_pals))))
#<end_chunk>
#<begin_text>
##' #### Projecting
#<end_text>
#<begin_chunk>```{r, princomp,echo=FALSE}
prcomp_all <- princomp(as(clr(natgen_renormalised), 'matrix'))
#plot(prcomp_all)
df_prcomp_exposures <- data.frame(prcomp_all$scores[,1:2], study=natgen_metadata$study, labels=NA)
df_prcomp_exposures_org <- data.frame(predict(prcomp_all, (org_clr_robustzeroes))[,1:2], 'Organoid', rownames(org))
colnames(df_prcomp_exposures_org) <- c('Comp.1', 'Comp.2', 'study', 'labels')
df_prcomp_exposures <- rbind(df_prcomp_exposures, df_prcomp_exposures_org)
df_prcomp_exposures$labels <- gsub('Sample ', '', df_prcomp_exposures$labels) ##here
myColors <- col_vector[1:length(unique(df_prcomp_exposures$study))]
names(myColors) <- unique(df_prcomp_exposures$study)
#ggthemr('flat dark')
#ggthemr_reset()
# set_swatch(myColors)
var_explained1 <- (prcomp_all$sdev**2)/sum(prcomp_all$sdev**2)
ggplot(df_prcomp_exposures, aes(x=Comp.1, y=Comp.2, col=study))+
geom_point() +
geom_label_repel(aes(label=labels))+
ggtitle("PCA of both datasets with projection")+
labs(x=paste0('PC1 (', round(var_explained1[1], 2)*100, '%)'),
y=paste0('PC2 (', round(var_explained1[2], 2)*100, '%)'))
#  scale_color_discrete(myColors)
# plot(prcomp_all$scores[,1:2], col=factor(natgen_metadata$study), pch=4)
# points(t(prcomp_all$loadings %*% t(org))[,1:2], pch=19, col='red')
## just to point out that they are the same
#<end_chunk>
#<begin_text>
##' #### What is different in these 'underrepresented' samples?
#<end_text>
#<begin_chunk>```{r, underrepresented, fig.height=3, echo=FALSE}
selected_underrepresented <- natgen_renormalised[which(df_prcomp_exposures$Comp.1 > max(df_prcomp_exposures[df_prcomp_exposures$study == 'Organoid','Comp.1'])),]
grid.arrange(createBarplot(as(selected_underrepresented, 'matrix'), remove_labels = TRUE)+ggtitle('Underrepresented'),
createBarplot(org, remove_labels = TRUE)+ggtitle('Organoids'))
dev.off()
par(mfrow=c(2,3))
for(i in 2:6){
boxplot((selected_underrepresented[,1]/selected_underrepresented[,i]),
(natgen_renormalised[,1]/natgen_renormalised[,i]), names = c('underrepresented', 'all Natgen'))
}
#<end_chunk>
#<begin_chunk>```{r, underrepresented2, fig.height=5,echo=FALSE}
## is it signature 3?
par(mfrow=c(2,4))
for(i in 1:7){
boxplot(clr_mat(selected_underrepresented)[,i],
org_clr_robustzeroes, main=paste0('CLR of ', i))
}
amalgamate(selected_underrepresented, which_to_amalgamate = c(1:2, 4:7))
amalgamate(selected_underrepresented, which_to_amalgamate = c(1:2, 4:7))
amalgamation_3 <- amalgamate(selected_underrepresented, which_to_amalgamate = c(1:2, 4:7))
amalgamation_3[,1]/amalgamation_3[,2]
ratio_amalgamation_3 <- function(subset, which_to_amalgamate = c(1:2, 4:7)){
amalgamation_3 <- amalgamate(subset, which_to_amalgamate)
amalgamation_3[,1]/amalgamation_3[,2]
}
ratio_amalgamation_3(selected_underrepresented)
ratio_amalgamation_3 <- function(subset, which_to_amalgamate = c(1:2, 4:7)){
amalgamation_3 <- amalgamate(subset, which_to_amalgamate)
amalgamation_3[,1]/amalgamation_3[,2]
}
ratio_amalgamation_3(selected_underrepresented)
org_clr_robustzeroes
org
natgen
ratio_amalgamation_3(selected_underrepresented)
ratio_amalgamation_3(natgen)
rowSums(natgen)
ratio_amalgamation_3(natgen_renormalised)
ratio_amalgamation_3(org)
boxplot(ratio_amalgamation_3(selected_underrepresented),
ratio_amalgamation_3(natgen_renormalised),
ratio_amalgamation_3(org))
boxplot(ratio_amalgamation_3(selected_underrepresented),
ratio_amalgamation_3(natgen_renormalised),
ratio_amalgamation_3(org))
par(mfrow=c(1,1))
boxplot(ratio_amalgamation_3(selected_underrepresented),
ratio_amalgamation_3(natgen_renormalised),
ratio_amalgamation_3(org))
boxplot(ratio_amalgamation_3(selected_underrepresented),
ratio_amalgamation_3(natgen_renormalised),
ratio_amalgamation_3(org), names = c("underrepresented", "all natgen", "organoids"))
## looking at the loadings
prcomp_all$loadings
## looking at the loadings
## in particular, looking for positive components in the first PC
prcomp_all$loadings
## looking at the loadings
## in particular, looking for positive components in the first PC
prcomp_all$loadings[,1]
## amalgamating: everything against s3
ratio_amalgamation <- function(subset, which_to_amalgamate){
amalgamation_3 <- amalgamate(subset, which_to_amalgamate)
amalgamation_3[,1]/amalgamation_3[,2]
}
par(mfrow=c(1,1))
boxplot(ratio_amalgamation_3(selected_underrepresented, c(1:2, 4:7)),
ratio_amalgamation_3(natgen_renormalised, c(1:2, 4:7)),
ratio_amalgamation_3(org, c(1:2, 4:7)), names = c("underrepresented", "all natgen", "organoids"))
amalgamation_3[,1]/amalgamation_3[,2]
## amalgamating: everything against s3
ratio_amalgamation <- function(subset, which_to_amalgamate){
amalgamation_3 <- amalgamate(subset, which_to_amalgamate)
amalgamation_3[,1]/amalgamation_3[,2]
}
par(mfrow=c(1,1))
boxplot(ratio_amalgamation(selected_underrepresented, c(1:2, 4:7)),
ratio_amalgamation(natgen_renormalised, c(1:2, 4:7)),
ratio_amalgamation(org, c(1:2, 4:7)), names = c("underrepresented", "all natgen", "organoids"))
## same with 1, 3, 5 amalgamation
boxplot(ratio_amalgamation(selected_underrepresented, c(1, 3, 5)),
ratio_amalgamation(natgen_renormalised, c(1, 3, 5)),
ratio_amalgamation(org, c(1, 3, 5)), names = c("underrepresented", "all natgen", "organoids"))
## same with 1, 3, 5 amalgamation
boxplot(ratio_amalgamation(selected_underrepresented, c(1, 3, 5)),
ratio_amalgamation(natgen_renormalised, c(1, 3, 5)),
ratio_amalgamation(org, c(1, 3, 5)), names = c("underrepresented", "all natgen", "organoids"))
## same with 1, 3, 5 amalgamation
boxplot(ratio_amalgamation(selected_underrepresented, c(1, 3, 5)),
ratio_amalgamation(natgen_renormalised, c(1, 3, 5)),
ratio_amalgamation(org, c(1, 3, 5)), names = c("underrepresented", "all natgen", "organoids"))
boxplot(ratio_amalgamation(selected_underrepresented, c(1:2, 4:7)),
ratio_amalgamation(natgen_renormalised, c(1:2, 4:7)),
ratio_amalgamation(org, c(1:2, 4:7)), names = c("underrepresented", "all natgen", "organoids"))
## looking at the loadings
## in particular, looking for positive components in the first PC
prcomp_all$loadings[,1]
## same with 1, 3, 5 amalgamation
boxplot(ratio_amalgamation(selected_underrepresented, c(1, 3, 5)),
ratio_amalgamation(natgen_renormalised, c(1, 3, 5)),
ratio_amalgamation(org, c(1, 3, 5)), names = c("underrepresented", "all natgen", "organoids"))
boxplot(ratio_amalgamation(selected_underrepresented, c(3)),
ratio_amalgamation(natgen_renormalised, c(3)),
ratio_amalgamation(org, c(3)), names = c("underrepresented", "all natgen", "organoids"))
boxplot(ratio_amalgamation(selected_underrepresented, c(2, 4, 6, 7)),
ratio_amalgamation(natgen_renormalised, c(2, 4, 6, 7)),
ratio_amalgamation(org, c(2, 4, 6, 7)), names = c("underrepresented", "all natgen", "organoids"))
boxplot(ratio_amalgamation(selected_underrepresented, c(1:2, 4:7)),
ratio_amalgamation(natgen_renormalised, c(1:2, 4:7)),
ratio_amalgamation(org, c(1:2, 4:7)), names = c("underrepresented", "all natgen", "organoids"))
r1 <- ratio_amalgamation(selected_underrepresented, c(1:2, 4:7))
r1 <- ratio_amalgamation(selected_underrepresented, c(1:2, 4:7))
r2 <- ratio_amalgamation(selected_underrepresented, c(2, 4, 6, 7))
r1 <- ratio_amalgamation(selected_underrepresented, c(1:2, 4:7))
boxplot(ratio_amalgamation(selected_underrepresented, c(2, 4, 6, 7)),
ratio_amalgamation(natgen_renormalised, c(2, 4, 6, 7)),
ratio_amalgamation(org, c(2, 4, 6, 7)), names = c("underrepresented", "all natgen", "organoids"))
boxplot(ratio_amalgamation(selected_underrepresented, c(1, 2, 4, 6, 7)),
ratio_amalgamation(natgen_renormalised, c(2, 4, 6, 7)),
ratio_amalgamation(org, c(2, 4, 6, 7)), names = c("underrepresented", "all natgen", "organoids"))
r1 <- ratio_amalgamation(selected_underrepresented, c(1:2, 4:7))
r2 <- ratio_amalgamation(selected_underrepresented, c(2, 4, 6, 7))
r1 <- ratio_amalgamation(selected_underrepresented, c(1:2, 4:7))
## same with 1, 3, 5 amalgamation
boxplot(ratio_amalgamation(selected_underrepresented, c(2, 4, 6, 7)),
ratio_amalgamation(natgen_renormalised, c(2, 4, 6, 7)),
ratio_amalgamation(org, c(2, 4, 6, 7)), names = c("underrepresented", "all natgen", "organoids"))
ratio_amalgamation(selected_underrepresented, c(2, 4, 6, 7))
## same with 1, 3, 5 amalgamation
boxplot(ratio_amalgamation(selected_underrepresented, c(2, 4, 6, 7)),
ratio_amalgamation(natgen_renormalised, c(2, 4, 6, 7)),
ratio_amalgamation(org, c(2, 4, 6, 7)), names = c("underrepresented", "all natgen", "organoids"))
boxplot(ratio_amalgamation(selected_underrepresented, c(1:2, 4:7)),
ratio_amalgamation(natgen_renormalised, c(1:2, 4:7)),
ratio_amalgamation(org, c(1:2, 4:7)), names = c("underrepresented", "all natgen", "organoids"))
## looking at the loadings
## in particular, looking for positive components in the first PC
prcomp_all$loadings[,1]
## same with 1, 3, 5 amalgamation
boxplot(ratio_amalgamation(selected_underrepresented, c(2, 4, 6, 7)),
ratio_amalgamation(natgen_renormalised, c(2, 4, 6, 7)),
ratio_amalgamation(org, c(2, 4, 6, 7)), names = c("underrepresented", "all natgen", "organoids"))
## same with 1, 3, 5 amalgamation
boxplot(ratio_amalgamation(selected_underrepresented, c(1, 2, 4, 6, 7)),
ratio_amalgamation(natgen_renormalised, c(1, 2, 4, 6, 7)),
ratio_amalgamation(org, c(1, 2, 4, 6, 7)), names = c("underrepresented", "all natgen", "organoids"))
## same with 1, 3, 5 amalgamation
boxplot(ratio_amalgamation(selected_underrepresented, c(5, 2, 4, 6, 7)),
ratio_amalgamation(natgen_renormalised, c(5, 2, 4, 6, 7)),
ratio_amalgamation(org, c(5, 2, 4, 6, 7)), names = c("underrepresented", "all natgen", "organoids"))
## same with 1, 3, 5 amalgamation
boxplot(ratio_amalgamation(selected_underrepresented, c(3, 2, 4, 6, 7)),
ratio_amalgamation(natgen_renormalised, c(3, 2, 4, 6, 7)),
ratio_amalgamation(org, c(3, 2, 4, 6, 7)), names = c("underrepresented", "all natgen", "organoids"))
## same with 1, 3, 5 amalgamation
boxplot(ratio_amalgamation(selected_underrepresented, c(3, 2, 4, 6, 7)),
ratio_amalgamation(natgen_renormalised, c(3, 2, 4, 6, 7)),
ratio_amalgamation(org, c(3, 2, 4, 6, 7)), names = c("underrepresented", "all natgen", "organoids"))
boxplot(ratio_amalgamation(selected_underrepresented, c(1:2, 4:7)),
ratio_amalgamation(natgen_renormalised, c(1:2, 4:7)),
ratio_amalgamation(org, c(1:2, 4:7)), names = c("underrepresented", "all natgen", "organoids"),
main="3 | all others")
(1:7)[!((1:7) %in% c(1:2, 4:7))]
boxplot_amalgamation <- function(partitionB){
boxplot(ratio_amalgamation(selected_underrepresented, partitionB),
ratio_amalgamation(natgen_renormalised, partitionB),
ratio_amalgamation(org, partitionB), names = c("underrepresented", "all natgen", "organoids"),
main=paste0((1:7)[!((1:7) %in% partitionA)] ," | all others"))
}
boxplot_amalgamation(c(1:2, 4:7))
boxplot_amalgamation <- function(partitionB){
boxplot(ratio_amalgamation(selected_underrepresented, partitionB),
ratio_amalgamation(natgen_renormalised, partitionB),
ratio_amalgamation(org, partitionB), names = c("underrepresented", "all natgen", "organoids"),
main=paste0((1:7)[!((1:7) %in% partitionB)] ," | all others"))
}
boxplot_amalgamation(c(1:2, 4:7))
boxplot_amalgamation(c(2:7))
boxplot_amalgamation <- function(partitionB){
boxplot(log(ratio_amalgamation(selected_underrepresented, partitionB)),
log(ratio_amalgamation(natgen_renormalised, partitionB)),
log(ratio_amalgamation(org, partitionB)),
names = c("underrepresented", "all natgen", "organoids"),
main=paste0((1:7)[!((1:7) %in% partitionB)] ," | all others"))
}
boxplot_amalgamation(c(1:2, 4:7))
boxplot_amalgamation(c(2:7))
boxplot_amalgamation(c(1:4, 6:7))
boxplot_amalgamation(c(2:7))
boxplot_amalgamation(c(1:2, 4:7))
boxplot_amalgamation(c(2:4, 6:7))
boxplot_amalgamation <- function(partitionB){
boxplot(log(ratio_amalgamation(selected_underrepresented, partitionB)),
log(ratio_amalgamation(natgen_renormalised, partitionB)),
log(ratio_amalgamation(org, partitionB)),
names = c("underrepresented", "all natgen", "organoids"),
main=paste0(paste0((1:7)[!((1:7) %in% partitionB)], collapse=+) ," | all others"))
}
boxplot_amalgamation(c(1:2, 4:7))
boxplot_amalgamation(c(2:7))
boxplot_amalgamation(c(1:4, 6:7))
boxplot_amalgamation(c(2:4, 6:7))
boxplot_amalgamation <- function(partitionB){
boxplot(log(ratio_amalgamation(selected_underrepresented, partitionB)),
log(ratio_amalgamation(natgen_renormalised, partitionB)),
log(ratio_amalgamation(org, partitionB)),
names = c("underrepresented", "all natgen", "organoids"),
main=paste0(paste0((1:7)[!((1:7) %in% partitionB)], collapse="+"), " | all others"))
}
boxplot_amalgamation(c(1:2, 4:7))
boxplot_amalgamation(c(2:7))
boxplot_amalgamation(c(1:4, 6:7))
boxplot_amalgamation(c(2:4, 6:7))
boxplot_amalgamation(c(2, 4:7))
boxplot_amalgamation(c(1:2, 4:7))
boxplot_amalgamation(c(2:7))
boxplot_amalgamation(c(2:7))
boxplot_amalgamation(c(1:2, 4:7))
boxplot_amalgamation(c(1:4, 6:7))
boxplot_amalgamation(c(2:4, 6:7))
boxplot_amalgamation(c(2, 4:7))
boxplot_amalgamation(c(2, 4, 6:7))
boxplot_amalgamation(c(1:2, 4, 6:7))
boxplot_amalgamation(c(2:7))
boxplot_amalgamation(c(2, 4, 6:7))
rbind(natgen_renormalised, org)
gsi.buildilrBase(W = matrix(c(1, 1, -1, 1, 1, 1, 1,
-1, 1 ,0, 1, 1, 1, 1,
0, -1, 0, -1, 1, 1, 1,
0, 0, 0, 0,  -1, 1, 1,
0, 0, 0, 0,  0, -1, 1)
)
)
gsi.buildilrBase(W = t(matrix(c(1, 1, -1, 1, 1, 1, 1,
-1, 1 ,0, 1, 1, 1, 1,
0, -1, 0, -1, 1, 1, 1,
0, 0, 0, 0,  -1, 1, 1,
0, 0, 0, 0,  0, -1, 1), ncol = 7, byrow = TRUE)))
ilr(x = rbind(natgen_renormalised, org),
V = gsi.buildilrBase(W = t(matrix(c(1, 1, -1, 1, 1, 1, 1,
-1, 1 ,0, 1, 1, 1, 1,
0, -1, 0, -1, 1, 1, 1,
0, 0, 0, 0,  -1, 1, 1,
0, 0, 0, 0,  0, -1, 1), ncol = 7, byrow = TRUE))))
ilr_3 <- ilr(x = rbind(natgen_renormalised, org),
V = gsi.buildilrBase(W = t(matrix(c(1, 1, -1, 1, 1, 1, 1,
-1, 1 ,0, 1, 1, 1, 1,
0, -1, 0, -1, 1, 1, 1,
0, 0, 0, 0,  -1, 1, 1,
0, 0, 0, 0,  0, -1, 1), ncol = 7, byrow = TRUE))))
## building an ilr where the first split is between 3 and everything else
ilr_3 <- ilr(x = rbind(natgen_renormalised, org),
V = gsi.buildilrBase(W = t(matrix(c(1, 1, -1, 1, 1, 1, 1,
-1, 1 ,0, 1, 1, 1, 1,
0, -1, 0, -1, 1, 1, 1,
0, 0, 0, 0,  -1, 1, 1,
0, 0, 0, 0,  0, -1, 1), ncol = 7, byrow = TRUE))))
ilr_3
dim(ilr_3)
## building an ilr where the first split is between 3 and everything else
ilr_3 <- ilr(x = rbind(natgen_renormalised, org),
V = gsi.buildilrBase(W = t(matrix(c(1, 1, -1, 1, 1, 1, 1,
-1, 1 ,0, 1, 1, 1, 1,
0, -1, 0, -1, 1, 1, 1,
0, 0, 0, 0,  -1, 1, 1,
0, 0, 0, 0,  0, -1, 1,
0, 0, 0, 0,  0, 0, -1), ncol = 7, byrow = TRUE))))
dim(ilr_3)
dim(ilr_3[,1])
(ilr_3[,1])
dim(org)[1]
split(ilr_3[,1], f = as.factor(natgen_metadata$study, rep('Organoid', dim(org)[1])))
split(ilr_3[,1], f = as.factor(c(natgen_metadata$study, rep('Organoid', dim(org)[1]))))
melt(split(ilr_3[,1], f = as.factor(c(natgen_metadata$study, rep('Organoid', dim(org)[1])))))
ilr_split <- melt(split(ilr_3[,1], f = as.factor(c(natgen_metadata$study, rep('Organoid', dim(org)[1])))))
head(ilr_split)
ggplot(ilr_split, aes(x=value, col=L1))+geom_density()
ggplot(ilr_split, aes(x=value, col=L1))+geom_density()+ggtitle('ILR of s3 vs all others')
#<begin_text>
##'
##'
##' - How do organoids from patients reflect the generality of OV patients?
##'
##' - Given signatures of CN, can we say something about how this compares to the TCGA cohort?
##'
##' Some sort of clustering of patients and organoids and see where organoids fall -- based on signatures, and also based on raw CN profiles.
##'
##' **To do**: for (1) signatures, and (2) CN profiles, do (1) clustering, (2) PCA (i.e. 4 plots).
##'
##' (Get TCGA, ICGC, BRITROC from Geoff, and compare this to organoids).
##'
##' Multisample OV: no difference of note.
##'
##'
#<end_text>
#<begin_omit>```{r}
rm(list = ls())
setwd(dirname(rstudioapi::getSourceEditorContext()$path))
Sys.setenv(LANG='en')
#<end_omit>```{r}
#<begin_chunk>```{r, libraries,message=FALSE}
library(gridExtra)
library(dendextend)
library(ggrepel)
library(cowplot)
library(compositions)
library(CompSign)
#<end_chunk>
#<begin_text>
##' ## Loading data
##' ### Data from organoids
#<end_text>
#<begin_chunk>```{r,fig.height=2.5,message=FALSE, echo=FALSE, message=FALSE,warning=FALSE}
x <- read.table("data/organoids_signature_exposuresDom.csv", sep = ',', header = T)
source("../../../CDA_in_Cancer/code/functions/meretricious/pretty_plots/prettySignatures.R")
org <- x[,-1]
org <- as(org, 'matrix')
rownames(org) <- paste0('Sample ', 1:nrow(org))
createBarplot(org, remove_labels = TRUE, order_labels = names(sort(org[,1]))) +
ggtitle('Exposures for the organoids')
#<end_chunk>
#<begin_text>
##' ### Data from Nat Gen paper
#<end_text>
#<begin_chunk>```{r, natgen_data,include=FALSE}
load("../../../CDA_in_Cancer/data/other/image_NatGen_rmd.RData")
natgen <- as.matrix(sig_data_unorm[,1:7])
natgen_metadata <- sig_data_unorm[,8:ncol(sig_data_unorm)]
## Normalisation is not done in such a way that rows add up to 1. Re-normalising
natgen_renormalised <- sweep(natgen, 1, rowSums(natgen), '/')
natgen_barplt1 <- createBarplot(natgen, remove_labels = TRUE,
order_labels = rownames(natgen)[(order(natgen[,1]))]) +
ggtitle('Original')
natgen_barplt2 <- createBarplot(natgen_renormalised, remove_labels = TRUE,
order_labels = rownames(natgen)[(order(natgen[,1]))]) +
ggtitle('Re-normalised')
grid.arrange(natgen_barplt1, natgen_barplt2)
#<end_chunk>
#<begin_chunk>```{r, barplots_per_study,echo=FALSE,message=FALSE,warning=FALSE}
natgen_barplt_perstudy <- list()
for(i in 1:length(unique(natgen_metadata$study))){
natgen_barplt_perstudy[[i]] <- createBarplot(natgen_renormalised[natgen_metadata$study == unique(natgen_metadata$study)[i],],
remove_labels = TRUE)+
ggtitle(paste0('Re-normalised\n', unique(natgen_metadata$study)[i] ))
}
plot_grid(plotlist=natgen_barplt_perstudy)
#<end_chunk>
#<begin_text>
##' ## PCA
##' ### PCA in compositional data
##'
##' In the book Analysing compositional data with R they say that PCA should be done on clr-transformed data.
##' Zeroes are an issue (see last section)
#<end_text>
#<begin_text>
##' ### PCA based on the signatures
##' The plot done with (biplot(princomp(acomp(x)))) is the same as plotting princomp(as(clr(x), 'matrix'))
#<end_text>
#<begin_chunk>```{r, clr,include=FALSE,eval=TRUE}
clr_vec <- function(x){
log(x) - mean(log(x))
}
clr_mat <- function(X){
.res <- t(apply(X, 1, clr_vec))
stopifnot(dim(.res) == dim(X))
.res
}
natgen_clr <- clr_mat(natgen_renormalised)
org_clr <- clr_mat(org)
org_clr_robustzeroes <- as(compositions::clr(org), 'matrix')
rownames(org_clr_robustzeroes) <- rownames(org_clr) <- paste0('Organoid ', rownames(org_clr))
#<end_chunk>
#<begin_chunk>```{r, cols,include=FALSE}
n <- 60
qual_col_pals = brewer.pal.info[brewer.pal.info$category == 'qual',]
col_vector = unique(unlist(mapply(brewer.pal, qual_col_pals$maxcolors, rownames(qual_col_pals))))
#<end_chunk>
#<begin_text>
##' #### Projecting
#<end_text>
#<begin_chunk>```{r, princomp,echo=FALSE}
prcomp_all <- princomp(as(clr(natgen_renormalised), 'matrix'))
#plot(prcomp_all)
df_prcomp_exposures <- data.frame(prcomp_all$scores[,1:2], study=natgen_metadata$study, labels=NA)
df_prcomp_exposures_org <- data.frame(predict(prcomp_all, (org_clr_robustzeroes))[,1:2], 'Organoid', rownames(org))
colnames(df_prcomp_exposures_org) <- c('Comp.1', 'Comp.2', 'study', 'labels')
df_prcomp_exposures <- rbind(df_prcomp_exposures, df_prcomp_exposures_org)
df_prcomp_exposures$labels <- gsub('Sample ', '', df_prcomp_exposures$labels) ##here
myColors <- col_vector[1:length(unique(df_prcomp_exposures$study))]
names(myColors) <- unique(df_prcomp_exposures$study)
#ggthemr('flat dark')
#ggthemr_reset()
# set_swatch(myColors)
var_explained1 <- (prcomp_all$sdev**2)/sum(prcomp_all$sdev**2)
ggplot(df_prcomp_exposures, aes(x=Comp.1, y=Comp.2, col=study))+
geom_point() +
geom_label_repel(aes(label=labels))+
ggtitle("PCA of both datasets with projection")+
labs(x=paste0('PC1 (', round(var_explained1[1], 2)*100, '%)'),
y=paste0('PC2 (', round(var_explained1[2], 2)*100, '%)'))
#  scale_color_discrete(myColors)
# plot(prcomp_all$scores[,1:2], col=factor(natgen_metadata$study), pch=4)
# points(t(prcomp_all$loadings %*% t(org))[,1:2], pch=19, col='red')
## just to point out that they are the same
#<end_chunk>
#<begin_text>
##' #### What is different in these 'underrepresented' samples?
#<end_text>
#<begin_chunk>```{r, underrepresented, fig.height=3, echo=FALSE}
selected_underrepresented <- natgen_renormalised[which(df_prcomp_exposures$Comp.1 > max(df_prcomp_exposures[df_prcomp_exposures$study == 'Organoid','Comp.1'])),]
grid.arrange(createBarplot(as(selected_underrepresented, 'matrix'), remove_labels = TRUE)+ggtitle('Underrepresented'),
createBarplot(org, remove_labels = TRUE)+ggtitle('Organoids'))
dev.off()
par(mfrow=c(2,3))
for(i in 2:6){
boxplot((selected_underrepresented[,1]/selected_underrepresented[,i]),
(natgen_renormalised[,1]/natgen_renormalised[,i]), names = c('underrepresented', 'all Natgen'))
}
#<end_chunk>
#<begin_chunk>```{r, underrepresented2, fig.height=5,echo=FALSE}
## is it signature 3?
par(mfrow=c(2,4))
for(i in 1:7){
boxplot(clr_mat(selected_underrepresented)[,i],
org_clr_robustzeroes, main=paste0('CLR of ', i))
}
#<end_chunk>
#<begin_text>
#' Here I am amalgamating, i.e. adding together exposures
#<end_text>
#<begin_chunk>```{r, underrepresented_amalgamation, fig.height=5,echo=TRUE}
## amalgamating: everything against s3
ratio_amalgamation <- function(subset, which_to_amalgamate){
amalgamation_3 <- amalgamate(subset, which_to_amalgamate)
amalgamation_3[,1]/amalgamation_3[,2]
}
boxplot(ratio_amalgamation(selected_underrepresented, c(1:2, 4:7)),
ratio_amalgamation(natgen_renormalised, c(1:2, 4:7)),
ratio_amalgamation(org, c(1:2, 4:7)), names = c("underrepresented", "all natgen", "organoids"),
main="3 | all others")
boxplot_amalgamation <- function(partitionB){
boxplot(log(ratio_amalgamation(selected_underrepresented, partitionB)),
log(ratio_amalgamation(natgen_renormalised, partitionB)),
log(ratio_amalgamation(org, partitionB)),
names = c("underrepresented", "all natgen", "organoids"),
main=paste0(paste0((1:7)[!((1:7) %in% partitionB)], collapse="+"), " | all others"))
}
## looking at the loadings
## in particular, looking for positive components in the first PC
prcomp_all$loadings[,1]
dev.off()
par(mfrow=c(2,4))
boxplot_amalgamation(c(2:7))
boxplot_amalgamation(c(1:2, 4:7))
boxplot_amalgamation(c(1:4, 6:7))
boxplot_amalgamation(c(2:4, 6:7))
boxplot_amalgamation(c(2, 4:7))
boxplot_amalgamation(c(1:2, 4, 6:7))
boxplot_amalgamation(c(2, 4, 6:7))
print(boxplot_amalgamation(c(2, 4, 6:7)))
boxplot_amalgamation(c(2, 4, 6:7))
