something_that_calculates_distance(groupa[,1], groupb[,1])
groupa[,1]
dist(groupa)
groupa
something_that_calculates_distance <- function(comp, reference){
.tmp <- colSums(comp)/sum(comp)
sum(abs(.tmp=reference))
}
## we pick the distance which is shorter to cluster
something_that_calculates_distance(groupa[,1], groupb[,1])
groupa[,1]
## we pick the distance which is shorter to cluster
something_that_calculates_distance(groupa, groupb)
something_that_calculates_distance <- function(comp, reference){
.tmp <- colSums(comp)/sum(comp)
sum(abs(.tmp-reference))
}
## we pick the distance which is shorter to cluster
something_that_calculates_distance(groupa, groupb)
something_that_calculates_distance(groupa, groupa)
## we pick the distance which is shorter to cluster
something_that_calculates_distance(groupa, par_a)
something_that_calculates_distance(groupa, par_a)
## we pick the distance which is shorter to cluster
something_that_calculates_distance(groupa, par_a)
something_that_calculates_distance(groupb, par_a)
something_that_calculates_distance(groupb[1:100,], par_a)
.sima <- MCMCpack::rdirichlet(1e3, alpha = par_a)
.simb <- MCMCpack::rdirichlet(1e3, alpha = par_b)
dist1a <- something_that_calculates_distance(.sima, par_a)
dist2b <- something_that_calculates_distance(.sima, par_b)
dist1a <- something_that_calculates_distance(.simb, par_a)
dist2b <- something_that_calculates_distance(.simb, par_b)
.sima <- MCMCpack::rdirichlet(1e3, alpha = par_a)
.simb <- MCMCpack::rdirichlet(1e3, alpha = par_b)
dist1a <- something_that_calculates_distance(.sima, par_a)
dist1b <- something_that_calculates_distance(.sima, par_b)
dist2a <- something_that_calculates_distance(.simb, par_a)
dist2b <- something_that_calculates_distance(.simb, par_b)
c(dist1a, dist1b, dist2a, dist2b)
.sima <- MCMCpack::rdirichlet(1e3, alpha = par_a)
.simb <- MCMCpack::rdirichlet(1e3, alpha = par_b)
distAa <- something_that_calculates_distance(.sima, par_a)
distAb <- something_that_calculates_distance(.sima, par_b)
distBa <- something_that_calculates_distance(.simb, par_a)
distBb <- something_that_calculates_distance(.simb, par_b)
c(distAa, distAb, distBa, distBb)
which.max(distAa, distAa)
which.max(c(distAa, distAb))
which.min(c(distAa, distAb))
clust1 <- which.min(c(distAa, distAb)) == 1 ## correct clustering?
clust2 <- which.min(c(distBa, distBb)) == 2 ## correct clustering?
clust1
clust2
effect_sizes
MCMCpack::rdirichlet(1e3, alpha = par_a)
v
effect_sizes
.sima <- Reduce('+', MCMCpack::rdirichlet(1e3, alpha = par_a), 1/effect_sizes*MCMCpack::rdirichlet(1e3, alpha = par_b))
1/effect_sizes*MCMCpack::rdirichlet(1e3, alpha = par_b)
effect_sizes
e_s=0.2
1/e_s*MCMCpack::rdirichlet(1e3, alpha = par_b)
.sima <- Reduce('+', MCMCpack::rdirichlet(1e3, alpha = par_a), 1/e_s*MCMCpack::rdirichlet(1e3, alpha = par_b))
.sima <- sweep(.sima, 1, rowSums(.sima), '/')
.simb <- Reduce('+', MCMCpack::rdirichlet(1e3, alpha = par_b), 1/e_s*MCMCpack::rdirichlet(1e3, alpha = par_a))
if(e_s == 0){
.sima <- MCMCpack::rdirichlet(1e3, alpha = par_a)
.simb <- MCMCpack::rdirichlet(1e3, alpha = par_b)
}else{
.sima <- Reduce('+', MCMCpack::rdirichlet(1e3, alpha = par_a), 1/e_s*MCMCpack::rdirichlet(1e3, alpha = par_b))
.sima <- sweep(.sima, 1, rowSums(.sima), '/')
.simb <- Reduce('+', MCMCpack::rdirichlet(1e3, alpha = par_b), 1/e_s*MCMCpack::rdirichlet(1e3, alpha = par_a))
.simb <- sweep(.simb, 1, rowSums(.simb), '/')
}
distAa <- something_that_calculates_distance(.sima, par_a)
distAb <- something_that_calculates_distance(.sima, par_b)
distBa <- something_that_calculates_distance(.simb, par_a)
distBb <- something_that_calculates_distance(.simb, par_b)
c(distAa, distAb, distBa, distBb)
clust1 <- which.min(c(distAa, distAb)) == 1 ## correct clustering?
clust2 <- which.min(c(distBa, distBb)) == 2 ## correct clustering?
clust1
clust2
replicate(100, function(){
if(e_s == 0){
.sima <- MCMCpack::rdirichlet(1e3, alpha = par_a)
.simb <- MCMCpack::rdirichlet(1e3, alpha = par_b)
}else{
.sima <- Reduce('+', MCMCpack::rdirichlet(1e3, alpha = par_a), 1/e_s*MCMCpack::rdirichlet(1e3, alpha = par_b))
.sima <- sweep(.sima, 1, rowSums(.sima), '/')
.simb <- Reduce('+', MCMCpack::rdirichlet(1e3, alpha = par_b), 1/e_s*MCMCpack::rdirichlet(1e3, alpha = par_a))
.simb <- sweep(.simb, 1, rowSums(.simb), '/')
}
distAa <- something_that_calculates_distance(.sima, par_a)
distAb <- something_that_calculates_distance(.sima, par_b)
distBa <- something_that_calculates_distance(.simb, par_a)
distBb <- something_that_calculates_distance(.simb, par_b)
c(distAa, distAb, distBa, distBb)
clust1 <- which.min(c(distAa, distAb)) == 1 ## correct clustering?
clust2 <- which.min(c(distBa, distBb)) == 2 ## correct clustering?
sum(clust1, clust2)
}
}
replicate(100, function(){
if(e_s == 0){
.sima <- MCMCpack::rdirichlet(1e3, alpha = par_a)
.simb <- MCMCpack::rdirichlet(1e3, alpha = par_b)
}else{
.sima <- Reduce('+', MCMCpack::rdirichlet(1e3, alpha = par_a), 1/e_s*MCMCpack::rdirichlet(1e3, alpha = par_b))
.sima <- sweep(.sima, 1, rowSums(.sima), '/')
.simb <- Reduce('+', MCMCpack::rdirichlet(1e3, alpha = par_b), 1/e_s*MCMCpack::rdirichlet(1e3, alpha = par_a))
.simb <- sweep(.simb, 1, rowSums(.simb), '/')
}
distAa <- something_that_calculates_distance(.sima, par_a)
distAb <- something_that_calculates_distance(.sima, par_b)
distBa <- something_that_calculates_distance(.simb, par_a)
distBb <- something_that_calculates_distance(.simb, par_b)
c(distAa, distAb, distBa, distBb)
clust1 <- which.min(c(distAa, distAb)) == 1 ## correct clustering?
clust2 <- which.min(c(distBa, distBb)) == 2 ## correct clustering?
sum(clust1, clust2)
})
replicate(100, expr = {
if(e_s == 0){
.sima <- MCMCpack::rdirichlet(1e3, alpha = par_a)
.simb <- MCMCpack::rdirichlet(1e3, alpha = par_b)
}else{
.sima <- Reduce('+', MCMCpack::rdirichlet(1e3, alpha = par_a), 1/e_s*MCMCpack::rdirichlet(1e3, alpha = par_b))
.sima <- sweep(.sima, 1, rowSums(.sima), '/')
.simb <- Reduce('+', MCMCpack::rdirichlet(1e3, alpha = par_b), 1/e_s*MCMCpack::rdirichlet(1e3, alpha = par_a))
.simb <- sweep(.simb, 1, rowSums(.simb), '/')
}
distAa <- something_that_calculates_distance(.sima, par_a)
distAb <- something_that_calculates_distance(.sima, par_b)
distBa <- something_that_calculates_distance(.simb, par_a)
distBb <- something_that_calculates_distance(.simb, par_b)
c(distAa, distAb, distBa, distBb)
clust1 <- which.min(c(distAa, distAb)) == 1 ## correct clustering?
clust2 <- which.min(c(distBa, distBb)) == 2 ## correct clustering?
sum(clust1, clust2)
})
all_bool <- list()
for(e_s in effect_sizes){
all_bool[[e_s]] = replicate(100, expr = {
if(e_s == 0){
.sima <- MCMCpack::rdirichlet(1e3, alpha = par_a)
.simb <- MCMCpack::rdirichlet(1e3, alpha = par_b)
}else{
.sima <- Reduce('+', MCMCpack::rdirichlet(1e3, alpha = par_a), 1/e_s*MCMCpack::rdirichlet(1e3, alpha = par_b))
.sima <- sweep(.sima, 1, rowSums(.sima), '/')
.simb <- Reduce('+', MCMCpack::rdirichlet(1e3, alpha = par_b), 1/e_s*MCMCpack::rdirichlet(1e3, alpha = par_a))
.simb <- sweep(.simb, 1, rowSums(.simb), '/')
}
distAa <- something_that_calculates_distance(.sima, par_a)
distAb <- something_that_calculates_distance(.sima, par_b)
distBa <- something_that_calculates_distance(.simb, par_a)
distBb <- something_that_calculates_distance(.simb, par_b)
c(distAa, distAb, distBa, distBb)
clust1 <- which.min(c(distAa, distAb)) == 1 ## correct clustering?
clust2 <- which.min(c(distBa, distBb)) == 2 ## correct clustering?
sum(clust1, clust2)
})
}
e_s
all_bool <- list()
for(e_s in effect_sizes){
all_bool[[paste0(e_s)]] = replicate(100, expr = {
if(e_s == 0){
.sima <- MCMCpack::rdirichlet(1e3, alpha = par_a)
.simb <- MCMCpack::rdirichlet(1e3, alpha = par_b)
}else{
.sima <- Reduce('+', MCMCpack::rdirichlet(1e3, alpha = par_a), 1/e_s*MCMCpack::rdirichlet(1e3, alpha = par_b))
.sima <- sweep(.sima, 1, rowSums(.sima), '/')
.simb <- Reduce('+', MCMCpack::rdirichlet(1e3, alpha = par_b), 1/e_s*MCMCpack::rdirichlet(1e3, alpha = par_a))
.simb <- sweep(.simb, 1, rowSums(.simb), '/')
}
distAa <- something_that_calculates_distance(.sima, par_a)
distAb <- something_that_calculates_distance(.sima, par_b)
distBa <- something_that_calculates_distance(.simb, par_a)
distBb <- something_that_calculates_distance(.simb, par_b)
c(distAa, distAb, distBa, distBb)
clust1 <- which.min(c(distAa, distAb)) == 1 ## correct clustering?
clust2 <- which.min(c(distBa, distBb)) == 2 ## correct clustering?
sum(clust1, clust2)
})
}
all_bool
e_s = 2
if(e_s == 0){
.sima <- MCMCpack::rdirichlet(1e3, alpha = par_a)
.simb <- MCMCpack::rdirichlet(1e3, alpha = par_b)
}else{
.sima <- Reduce('+', MCMCpack::rdirichlet(1e3, alpha = par_a), 1/e_s*MCMCpack::rdirichlet(1e3, alpha = par_b))
.sima <- sweep(.sima, 1, rowSums(.sima), '/')
.simb <- Reduce('+', MCMCpack::rdirichlet(1e3, alpha = par_b), 1/e_s*MCMCpack::rdirichlet(1e3, alpha = par_a))
.simb <- sweep(.simb, 1, rowSums(.simb), '/')
}
distAa <- something_that_calculates_distance(.sima, par_a)
distAb <- something_that_calculates_distance(.sima, par_b)
distBa <- something_that_calculates_distance(.simb, par_a)
distBb <- something_that_calculates_distance(.simb, par_b)
c(distAa, distAb, distBa, distBb)
clust1 <- which.min(c(distAa, distAb)) == 1 ## correct clustering?
clust2 <- which.min(c(distBa, distBb)) == 2 ## correct clustering?
c(clust1, clust2)
which.min(c(distBa, distBb))
which.min(c(distAa, distAb))
effect_sizes[1:3]
all_bool <- list()
for(e_s in effect_sizes[1:3]){
all_bool[[paste0(e_s)]] = replicate(100, expr = {
if(e_s == 0){
.sima <- MCMCpack::rdirichlet(1e3, alpha = par_a)
.simb <- MCMCpack::rdirichlet(1e3, alpha = par_b)
}else{
.sima <- Reduce('+', MCMCpack::rdirichlet(1e3, alpha = par_a), 1/e_s*MCMCpack::rdirichlet(1e3, alpha = par_b))
.sima <- sweep(.sima, 1, rowSums(.sima), '/')
.simb <- Reduce('+', MCMCpack::rdirichlet(1e3, alpha = par_b), 1/e_s*MCMCpack::rdirichlet(1e3, alpha = par_a))
.simb <- sweep(.simb, 1, rowSums(.simb), '/')
}
distAa <- something_that_calculates_distance(.sima, par_a)
distAb <- something_that_calculates_distance(.sima, par_b)
distBa <- something_that_calculates_distance(.simb, par_a)
distBb <- something_that_calculates_distance(.simb, par_b)
c(distAa, distAb, distBa, distBb)
clust1 <- which.min(c(distAa, distAb)) == 1 ## correct clustering (lowest distance)
clust2 <- which.min(c(distBa, distBb)) == 2 ## correct clustering (lowest distance)
c(clust1, clust2)
})
}
all_bool
# aitch
something_that_calculates_distance <- function(comp, reference){
.tmp <- exp(apply(log(comp), 2, mean))
sum(abs(.tmp-reference))
}
all_bool <- list()
for(e_s in effect_sizes[1:3]){
all_bool[[paste0(e_s)]] = replicate(100, expr = {
if(e_s == 0){
.sima <- MCMCpack::rdirichlet(1e3, alpha = par_a)
.simb <- MCMCpack::rdirichlet(1e3, alpha = par_b)
}else{
.sima <- Reduce('+', MCMCpack::rdirichlet(1e3, alpha = par_a), 1/e_s*MCMCpack::rdirichlet(1e3, alpha = par_b))
.sima <- sweep(.sima, 1, rowSums(.sima), '/')
.simb <- Reduce('+', MCMCpack::rdirichlet(1e3, alpha = par_b), 1/e_s*MCMCpack::rdirichlet(1e3, alpha = par_a))
.simb <- sweep(.simb, 1, rowSums(.simb), '/')
}
distAa <- something_that_calculates_distance(.sima, par_a)
distAb <- something_that_calculates_distance(.sima, par_b)
distBa <- something_that_calculates_distance(.simb, par_a)
distBb <- something_that_calculates_distance(.simb, par_b)
c(distAa, distAb, distBa, distBb)
clust1 <- which.min(c(distAa, distAb)) == 1 ## correct clustering (lowest distance)
clust2 <- which.min(c(distBa, distBb)) == 2 ## correct clustering (lowest distance)
c(clust1, clust2)
})
}
all_bool ### all the distances for one of the groups is larger
par_a
par_b
distAa
.sima
distAb
plot(compositions::acomp(.sima), pch=4)
.sima
1/e_s*MCMCpack::rdirichlet(1e3, alpha = par_b)
.sima <- Reduce('+', MCMCpack::rdirichlet(1e3, alpha = par_a), 1/e_s*MCMCpack::rdirichlet(1e3, alpha = par_b))
.sima
MCMCpack::rdirichlet(1e3, alpha = par_a)
1/e_s
MCMCpack::rdirichlet(1e3, alpha = par_b)
par_b
if(e_s == 0){
.sima <- MCMCpack::rdirichlet(1e3, alpha = par_a)
.simb <- MCMCpack::rdirichlet(1e3, alpha = par_b)
}else{
.sima <- Reduce('+', MCMCpack::rdirichlet(1e3, alpha = par_a_true), 1/e_s*MCMCpack::rdirichlet(1e3, alpha = par_b_true))
.sima <- sweep(.sima, 1, rowSums(.sima), '/')
.simb <- Reduce('+', MCMCpack::rdirichlet(1e3, alpha = par_b_true), 1/e_s*MCMCpack::rdirichlet(1e3, alpha = par_a_true))
.simb <- sweep(.simb, 1, rowSums(.simb), '/')
}
distAa <- something_that_calculates_distance(.sima, par_a)
distAb <- something_that_calculates_distance(.sima, par_b)
distBa <- something_that_calculates_distance(.simb, par_a)
distBb <- something_that_calculates_distance(.simb, par_b)
c(distAa, distAb, distBa, distBb)
clust1 <- which.min(c(distAa, distAb)) == 1 ## correct clustering (lowest distance)
clust2 <- which.min(c(distBa, distBb)) == 2 ## correct clustering (lowest distance)
c(clust1, clust2)
for(e_s in effect_sizes[1:3]){
all_bool[[paste0(e_s)]] = replicate(100, expr = {
if(e_s == 0){
.sima <- MCMCpack::rdirichlet(1e3, alpha = par_a)
.simb <- MCMCpack::rdirichlet(1e3, alpha = par_b)
}else{
.sima <- Reduce('+', MCMCpack::rdirichlet(1e3, alpha = par_a_true), 1/e_s*MCMCpack::rdirichlet(1e3, alpha = par_b_true))
.sima <- sweep(.sima, 1, rowSums(.sima), '/')
.simb <- Reduce('+', MCMCpack::rdirichlet(1e3, alpha = par_b_true), 1/e_s*MCMCpack::rdirichlet(1e3, alpha = par_a_true))
.simb <- sweep(.simb, 1, rowSums(.simb), '/')
}
distAa <- something_that_calculates_distance(.sima, par_a)
distAb <- something_that_calculates_distance(.sima, par_b)
distBa <- something_that_calculates_distance(.simb, par_a)
distBb <- something_that_calculates_distance(.simb, par_b)
c(distAa, distAb, distBa, distBb)
clust1 <- which.min(c(distAa, distAb)) == 1 ## correct clustering (lowest distance)
clust2 <- which.min(c(distBa, distBb)) == 2 ## correct clustering (lowest distance)
c(clust1, clust2)
})
}
all_bool ### all the distances for one of the groups is larger
.sima
.simb
1/e_s
MCMCpack::rdirichlet(1e3, alpha = par_b_true)
1/e_s*MCMCpack::rdirichlet(1e3, alpha = par_b_true)
MCMCpack::rdirichlet(1e3, alpha = par_a_true)
Reduce('+', MCMCpack::rdirichlet(1e3, alpha = par_a_true), 1/e_s*MCMCpack::rdirichlet(1e3, alpha = par_b_true))
MCMCpack::rdirichlet(1e3, alpha = par_a_true)
.sima
MCMCpack::rdirichlet(1e3, alpha = par_a_true) + 1/e_s*MCMCpack::rdirichlet(1e3, alpha = par_b_true)
.sima <- MCMCpack::rdirichlet(1e3, alpha = par_a_true) + 1/e_s*MCMCpack::rdirichlet(1e3, alpha = par_b_true)
.sima <- sweep(.sima, 1, rowSums(.sima), '/')
.sima
for(e_s in effect_sizes[1:3]){
all_bool[[paste0(e_s)]] = replicate(100, expr = {
if(e_s == 0){
.sima <- MCMCpack::rdirichlet(1e3, alpha = par_a)
.simb <- MCMCpack::rdirichlet(1e3, alpha = par_b)
}else{
.sima <- MCMCpack::rdirichlet(1e3, alpha = par_a_true) + 1/e_s*MCMCpack::rdirichlet(1e3, alpha = par_b_true)
.sima <- sweep(.sima, 1, rowSums(.sima), '/')
.simb <- MCMCpack::rdirichlet(1e3, alpha = par_b_true) + 1/e_s*MCMCpack::rdirichlet(1e3, alpha = par_a_true)
.simb <- sweep(.simb, 1, rowSums(.simb), '/')
}
distAa <- something_that_calculates_distance(.sima, par_a)
distAb <- something_that_calculates_distance(.sima, par_b)
distBa <- something_that_calculates_distance(.simb, par_a)
distBb <- something_that_calculates_distance(.simb, par_b)
c(distAa, distAb, distBa, distBb)
clust1 <- which.min(c(distAa, distAb)) == 1 ## correct clustering (lowest distance)
clust2 <- which.min(c(distBa, distBb)) == 2 ## correct clustering (lowest distance)
c(clust1, clust2)
})
}
all_bool ### all the distances for one of the groups is larger
.sima
plot(compositions::acomp(.sima), pch=4)
plot(compositions::acomp(par_b), col='red', add = TRUE, pch=19)
plot(compositions::acomp(par_b_true), col='blue', add = TRUE, pch=19)
plot(compositions::acomp(par_a_true), col='blue', add = TRUE, pch=19)
e_s
## effect size
effect_sizes <- seq(1, 6, by=0.2)
## effect size
effect_sizes <- seq(1, 4, by=0.5)
something_that_calculates_distance <- function(comp, reference){
.tmp <- colSums(comp)/sum(comp)
sum(abs(.tmp-reference))
}
# aitch
something_that_calculates_distance <- function(comp, reference){
.tmp <- exp(apply(log(comp), 2, mean))
sum(abs(.tmp-reference))
}
## we pick the distance which is shorter to cluster
something_that_calculates_distance(groupa, par_a)
something_that_calculates_distance(groupb, par_a)
something_that_calculates_distance(groupb[1:100,], par_a)
all_bool <- list()
for(e_s in effect_sizes[1:3]){
all_bool[[paste0(e_s)]] = replicate(100, expr = {
if(e_s == 0){
.sima <- MCMCpack::rdirichlet(1e3, alpha = par_a)
.simb <- MCMCpack::rdirichlet(1e3, alpha = par_b)
}else{
.sima <- MCMCpack::rdirichlet(1e3, alpha = par_a_true) + 1/e_s*MCMCpack::rdirichlet(1e3, alpha = par_b_true)
.sima <- sweep(.sima, 1, rowSums(.sima), '/')
.simb <- MCMCpack::rdirichlet(1e3, alpha = par_b_true) + 1/e_s*MCMCpack::rdirichlet(1e3, alpha = par_a_true)
.simb <- sweep(.simb, 1, rowSums(.simb), '/')
}
distAa <- something_that_calculates_distance(.sima, par_a)
distAb <- something_that_calculates_distance(.sima, par_b)
distBa <- something_that_calculates_distance(.simb, par_a)
distBb <- something_that_calculates_distance(.simb, par_b)
c(distAa, distAb, distBa, distBb)
clust1 <- which.min(c(distAa, distAb)) == 1 ## correct clustering (lowest distance)
clust2 <- which.min(c(distBa, distBb)) == 2 ## correct clustering (lowest distance)
c(clust1, clust2)
})
}
all_bool ### all the distances for one of the groups is larger
## effect size
effect_sizes <- seq(0, 4, by=0.5)
something_that_calculates_distance <- function(comp, reference){
.tmp <- colSums(comp)/sum(comp)
sum(abs(.tmp-reference))
}
# aitch
something_that_calculates_distance <- function(comp, reference){
.tmp <- exp(apply(log(comp), 2, mean))
sum(abs(.tmp-reference))
}
## we pick the distance which is shorter to cluster
something_that_calculates_distance(groupa, par_a)
something_that_calculates_distance(groupb, par_a)
something_that_calculates_distance(groupb[1:100,], par_a)
all_bool <- list()
for(e_s in effect_sizes[1:3]){
all_bool[[paste0(e_s)]] = replicate(100, expr = {
if(e_s == 0){
.sima <- MCMCpack::rdirichlet(1e3, alpha = par_a)
.simb <- MCMCpack::rdirichlet(1e3, alpha = par_b)
}else{
.sima <- MCMCpack::rdirichlet(1e3, alpha = par_a_true) + 1/e_s*MCMCpack::rdirichlet(1e3, alpha = par_b_true)
.sima <- sweep(.sima, 1, rowSums(.sima), '/')
.simb <- MCMCpack::rdirichlet(1e3, alpha = par_b_true) + 1/e_s*MCMCpack::rdirichlet(1e3, alpha = par_a_true)
.simb <- sweep(.simb, 1, rowSums(.simb), '/')
}
distAa <- something_that_calculates_distance(.sima, par_a)
distAb <- something_that_calculates_distance(.sima, par_b)
distBa <- something_that_calculates_distance(.simb, par_a)
distBb <- something_that_calculates_distance(.simb, par_b)
c(distAa, distAb, distBa, distBb)
clust1 <- which.min(c(distAa, distAb)) == 1 ## correct clustering (lowest distance)
clust2 <- which.min(c(distBa, distBb)) == 2 ## correct clustering (lowest distance)
c(clust1, clust2)
})
}
all_bool ### all the distances for one of the groups is larger
effect_sizes
## effect size
effect_sizes <- seq(1, 4, by=0.5)
something_that_calculates_distance <- function(comp, reference){
.tmp <- colSums(comp)/sum(comp)
sum(abs(.tmp-reference))
}
# aitch
something_that_calculates_distance <- function(comp, reference){
.tmp <- exp(apply(log(comp), 2, mean))
sum(abs(.tmp-reference))
}
## we pick the distance which is shorter to cluster
something_that_calculates_distance(groupa, par_a)
something_that_calculates_distance(groupb, par_a)
something_that_calculates_distance(groupb[1:100,], par_a)
all_bool <- list()
for(e_s in effect_sizes){
all_bool[[paste0(e_s)]] = replicate(100, expr = {
if(e_s == 0){
.sima <- MCMCpack::rdirichlet(1e3, alpha = par_a)
.simb <- MCMCpack::rdirichlet(1e3, alpha = par_b)
}else{
.sima <- MCMCpack::rdirichlet(1e3, alpha = par_a_true) + 1/e_s*MCMCpack::rdirichlet(1e3, alpha = par_b_true)
.sima <- sweep(.sima, 1, rowSums(.sima), '/')
.simb <- MCMCpack::rdirichlet(1e3, alpha = par_b_true) + 1/e_s*MCMCpack::rdirichlet(1e3, alpha = par_a_true)
.simb <- sweep(.simb, 1, rowSums(.simb), '/')
}
distAa <- something_that_calculates_distance(.sima, par_a)
distAb <- something_that_calculates_distance(.sima, par_b)
distBa <- something_that_calculates_distance(.simb, par_a)
distBb <- something_that_calculates_distance(.simb, par_b)
c(distAa, distAb, distBa, distBb)
clust1 <- which.min(c(distAa, distAb)) == 1 ## correct clustering (lowest distance)
clust2 <- which.min(c(distBa, distBb)) == 2 ## correct clustering (lowest distance)
c(clust1, clust2)
})
}
all_bool ### all the distances for one of the groups is larger
plot(compositions::acomp(.sima), pch=4)
plot(compositions::acomp(par_a_true), col='blue', add = TRUE, pch=19)
plot(compositions::acomp(par_b_true), col='blue', add = TRUE, pch=19)
effect_sizes
e_s
plot(compositions::acomp(.simb), pch=4)
MCMCpack::rdirichlet(1e3, alpha = par_b_true)
1/e_s*MCMCpack::rdirichlet(1e3, alpha = par_a_true)
.simb <- MCMCpack::rdirichlet(1e3, alpha = par_b_true) + 1/e_s*MCMCpack::rdirichlet(1e3, alpha = par_a_true)
.simb
.simb <- sweep(.simb, 1, rowSums(.simb), '/')
.simb
if(e_s == 0){
.sima <- MCMCpack::rdirichlet(1e3, alpha = par_a)
.simb <- MCMCpack::rdirichlet(1e3, alpha = par_b)
}else{
.sima <- MCMCpack::rdirichlet(1e3, alpha = par_a_true) + 1/e_s*MCMCpack::rdirichlet(1e3, alpha = par_b_true)
.sima <- sweep(.sima, 1, rowSums(.sima), '/')
.simb <- MCMCpack::rdirichlet(1e3, alpha = par_b_true) + 1/e_s*MCMCpack::rdirichlet(1e3, alpha = par_a_true)
.simb <- sweep(.simb, 1, rowSums(.simb), '/')
}
b.simb
.simb
plot(compositions::acomp(.simb), pch=4)
plot(compositions::acomp(.sima), pch=4)
plot(compositions::acomp(.sima), pch=4)
plot(compositions::acomp(par_a_true), col='blue', add = TRUE, pch=19)
plot(compositions::acomp(par_b_true), col='blue', add = TRUE, pch=19)
plot(compositions::acomp(.simb), pch=4)
plot(compositions::acomp(par_a_true), col='blue', add = TRUE, pch=19)
plot(compositions::acomp(par_b_true), col='blue', add = TRUE, pch=19)
distAa <- something_that_calculates_distance(.sima, par_a)
distAb <- something_that_calculates_distance(.sima, par_b)
distBa <- something_that_calculates_distance(.simb, par_a)
distBb <- something_that_calculates_distance(.simb, par_b)
c(distAa, distAb, distBa, distBb)
clust1 <- which.min(c(distAa, distAb)) == 1 ## correct clustering (lowest distance)
clust2 <- which.min(c(distBa, distBb)) == 2 ## correct clustering (lowest distance)
c(clust1, clust2)
all_bool
e_s=1
