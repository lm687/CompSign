.x <- .x[,-c(4,5)]
.x
}))
names(all_presence_abs) <- names(all_objs)
all_presence_abs <- melt(all_presence_abs, id.vars = c('Var1', 'Var2', 'value', 'value.1'))
order_sigs <- levels(all_presence_abs$Var1)
order_samples <- dcast(all_presence_abs[,-4], formula = L1~Var1+Var2)
rownamessamples <- order_samples[,1]; order_samples <- order_samples[,-1]
order_samples <- apply(order_samples, 2, as.numeric)
order_samples
rownames(order_samples) <- rownamessamples
order_samples <- order_samples[order(rowSums(order_samples), decreasing = TRUE),]
order_samples
order_sigs <- levels(all_presence_abs$Var1)
order_samples <- dcast(all_presence_abs[,-4], formula = L1~Var1+Var2)
rownamessamples <- order_samples[,1]; order_samples <- order_samples[,-1]
order_samples <- apply(order_samples, 2, as.numeric)
rownames(order_samples) <- rownamessamples
order_samples <- order_samples[order(rowSums(order_samples), decreasing = FALSE),]
order_samples
rowSums(order_samples)
head(order_samples)
plot(rowSums(order_samples))
all_presence_abs <- all_presence_abs[all_presence_abs$value,]
ggplot()+
geom_point(data = all_presence_abs[all_presence_abs$Var2 == 'Clonal',],
aes(x=factor(Var1, levels=order_sigs), y=factor(L1, levels=rownames(order_samples)),
col=log(value.1), size=3), shape=15)+
geom_point(data = all_presence_abs[all_presence_abs$Var2 == 'Subclonal',],
aes(x=factor(Var1, levels=order_sigs), y=factor(L1, levels=rownames(order_samples)),
col=log(value.1), size=3), shape=20)+
#scale_color_manual(values=c("#ffffff", "#000000"))+
theme_bw()+
theme(axis.text.x = element_text(angle = 70, hjust = 1))+
ggtitle(paste0('Square: first clone, circle: second clone\nThreshold for presence (abs exposure): ', thres2))+
labs(x='', y='')
ggsave(paste0("../../results/clonal_structure/presence_absence_sigs_clonalsubclonal_thres", thres2, "_allsamps.pdf"),
width = 11, height = 350, limitsize = FALSE)
head(order_samples)
head(all_presence_abs)
head(all_presence_abs)
head(rownames(order_samples))
all_presence_abs$L1 <- factor(all_presence_abs$L1, levels=rownames(order_samples))
ggplot()+
geom_point(data = all_presence_abs[all_presence_abs$Var2 == 'Clonal',],
aes(x=factor(Var1, levels=order_sigs), y=factor(L1, levels=rownames(order_samples)),
col=log(value.1), size=3), shape=15)+
geom_point(data = all_presence_abs[all_presence_abs$Var2 == 'Subclonal',],
aes(x=factor(Var1, levels=order_sigs), y=factor(L1, levels=rownames(order_samples)),
col=log(value.1), size=3), shape=20)+
#scale_color_manual(values=c("#ffffff", "#000000"))+
theme_bw()+
theme(axis.text.x = element_text(angle = 70, hjust = 1))+
ggtitle(paste0('Square: first clone, circle: second clone\nThreshold for presence (abs exposure): ', thres2))+
labs(x='', y='')
ggsave(paste0("../../results/clonal_structure/presence_absence_sigs_clonalsubclonal_thres", thres2, "_allsamps.pdf"),
width = 11, height = 350, limitsize = FALSE)
head(all_presence_abs)
all_presence_abs$L1
ggplot()+
geom_point(data = all_presence_abs[all_presence_abs$Var2 == 'Clonal',],
aes(x=factor(Var1, levels=order_sigs), y=L1,
col=log(value.1), size=3), shape=15)+
geom_point(data = all_presence_abs[all_presence_abs$Var2 == 'Subclonal',],
aes(x=factor(Var1, levels=order_sigs), y=L1,
col=log(value.1), size=3), shape=20)+
#scale_color_manual(values=c("#ffffff", "#000000"))+
theme_bw()+
theme(axis.text.x = element_text(angle = 70, hjust = 1))+
ggtitle(paste0('Square: first clone, circle: second clone\nThreshold for presence (abs exposure): ', thres2))+
labs(x='', y='')
ggsave(paste0("../../results/clonal_structure/presence_absence_sigs_clonalsubclonal_thres", thres2, "_allsamps.pdf"),
width = 11, height = 350, limitsize = FALSE)
ggplot()+
geom_point(data = all_presence_abs[all_presence_abs$Var2 == 'Clonal',][1:10,],
aes(x=factor(Var1, levels=order_sigs), y=L1,
col=log(value.1), size=3), shape=15)+
geom_point(data = all_presence_abs[all_presence_abs$Var2 == 'Subclonal',][1:10,],
aes(x=factor(Var1, levels=order_sigs), y=L1,
col=log(value.1), size=3), shape=20)+
#scale_color_manual(values=c("#ffffff", "#000000"))+
theme_bw()+
theme(axis.text.x = element_text(angle = 70, hjust = 1))+
ggtitle(paste0('Square: first clone, circle: second clone\nThreshold for presence (abs exposure): ', thres2))+
labs(x='', y='')
all_presence_abs <- lapply(names(all_objs), try(function(samplename, thres=thres2){
#print(samplename)
.ccfs <- sapply(rownames(all_objs[[samplename]][[1]][[1]]), function(i){
.x <- strsplit(i, ',')[[1]][1]
as.numeric(substr(.x, 2, nchar(.x)))
})
.clonal <- all_objs[[samplename]][[1]][[1]][.ccfs >= 1,]
.subclonal <- all_objs[[samplename]][[1]][[1]][.ccfs < 1,]
if(!is.null(nrow(.clonal))) .clonal <- colSums(.clonal)
if(!is.null(nrow(.subclonal))) .subclonal <- colSums(.subclonal)
.cols1 <- sapply(list(.clonal, .subclonal), function(i) i > thres); colnames(.cols1) <- c('Clonal', 'Subclonal')
.cols2 <- cbind(.clonal, .subclonal); colnames(.cols2) <- c('Clonal_Num', 'Subclonal_Num')
.x <- cbind.data.frame(melt(.cols1), melt(.cols2))
.x <- .x[,-c(4,5)]
.x
}))
names(all_presence_abs) <- names(all_objs)
all_presence_abs <- melt(all_presence_abs, id.vars = c('Var1', 'Var2', 'value', 'value.1'))
order_sigs <- levels(all_presence_abs$Var1)
order_samples <- dcast(all_presence_abs[,-4], formula = L1~Var1+Var2)
rownamessamples <- order_samples[,1]; order_samples <- order_samples[,-1]
order_samples <- apply(order_samples, 2, as.numeric)
rownames(order_samples) <- rownamessamples
order_samples <- order_samples[order(rowSums(order_samples), decreasing = FALSE),]
all_presence_abs$L1 <- factor(all_presence_abs$L1, levels=rownames(order_samples))
ggplot()+
geom_point(data = all_presence_abs[all_presence_abs$Var2 == 'Clonal',][all_presence_abs$value,],
aes(x=factor(Var1, levels=order_sigs), y=L1,
col=log(value.1), size=3), shape=15)+
geom_point(data = all_presence_abs[all_presence_abs$Var2 == 'Subclonal',][all_presence_abs$value,],
aes(x=factor(Var1, levels=order_sigs), y=L1,
col=log(value.1), size=3), shape=20)+
#scale_color_manual(values=c("#ffffff", "#000000"))+
theme_bw()+
theme(axis.text.x = element_text(angle = 70, hjust = 1))+
ggtitle(paste0('Square: first clone, circle: second clone\nThreshold for presence (abs exposure): ', thres2))+
labs(x='', y='')
ggsave(paste0("../../results/clonal_structure/presence_absence_sigs_clonalsubclonal_thres", thres2, "_allsamps.pdf"),
width = 11, height = 350, limitsize = FALSE)
all_files <- list.files(outfolder)[1:10]
all_files <- all_files[grepl('merged', all_files)]
all_objs <- list()
for(i in paste0(objectfolder, getname(all_files), '.RDS')){
print(i)
try(all_objs[[getname2(i)]] <- readRDS(i))
}
thres2 <- 0
all_presence_abs <- lapply(names(all_objs), try(function(samplename, thres=thres2){
#print(samplename)
.ccfs <- sapply(rownames(all_objs[[samplename]][[1]][[1]]), function(i){
.x <- strsplit(i, ',')[[1]][1]
as.numeric(substr(.x, 2, nchar(.x)))
})
.clonal <- all_objs[[samplename]][[1]][[1]][.ccfs >= 1,]
.subclonal <- all_objs[[samplename]][[1]][[1]][.ccfs < 1,]
if(!is.null(nrow(.clonal))) .clonal <- colSums(.clonal)
if(!is.null(nrow(.subclonal))) .subclonal <- colSums(.subclonal)
.cols1 <- sapply(list(.clonal, .subclonal), function(i) i > thres); colnames(.cols1) <- c('Clonal', 'Subclonal')
.cols2 <- cbind(.clonal, .subclonal); colnames(.cols2) <- c('Clonal_Num', 'Subclonal_Num')
.x <- cbind.data.frame(melt(.cols1), melt(.cols2))
.x <- .x[,-c(4,5)]
.x
}))
names(all_presence_abs) <- names(all_objs)
all_presence_abs <- melt(all_presence_abs, id.vars = c('Var1', 'Var2', 'value', 'value.1'))
order_sigs <- levels(all_presence_abs$Var1)
order_samples <- dcast(all_presence_abs[,-4], formula = L1~Var1+Var2)
rownamessamples <- order_samples[,1]; order_samples <- order_samples[,-1]
order_samples <- apply(order_samples, 2, as.numeric)
rownames(order_samples) <- rownamessamples
order_samples <- order_samples[order(rowSums(order_samples), decreasing = FALSE),]
#all_presence_abs <- all_presence_abs[all_presence_abs$value,]
all_presence_abs$L1 <- factor(all_presence_abs$L1, levels=rownames(order_samples))
ggplot()+
geom_point(data = all_presence_abs[all_presence_abs$Var2 == 'Clonal',][all_presence_abs$value,],
aes(x=factor(Var1, levels=order_sigs), y=L1,
col=log(value.1), size=3), shape=15)+
geom_point(data = all_presence_abs[all_presence_abs$Var2 == 'Subclonal',][all_presence_abs$value,],
aes(x=factor(Var1, levels=order_sigs), y=L1,
col=log(value.1), size=3), shape=20)+
#scale_color_manual(values=c("#ffffff", "#000000"))+
theme_bw()+
theme(axis.text.x = element_text(angle = 70, hjust = 1))+
ggtitle(paste0('Square: first clone, circle: second clone\nThreshold for presence (abs exposure): ', thres2))+
labs(x='', y='')
all_presence_abs
all_presence_abs$L1
unique(all_presence_abs$L1)
all_presence_abs[all_presence_abs$Var2 == 'Clonal',][all_presence_abs$value,]
ggplot()+
geom_point(data = all_presence_abs[all_presence_abs$Var2 == 'Clonal',],#[all_presence_abs$value,],
aes(x=factor(Var1, levels=order_sigs), y=L1,
col=log(value.1), size=3), shape=15)+
geom_point(data = all_presence_abs[all_presence_abs$Var2 == 'Subclonal',],#[all_presence_abs$value,],
aes(x=factor(Var1, levels=order_sigs), y=L1,
col=log(value.1), size=3), shape=20)+
#scale_color_manual(values=c("#ffffff", "#000000"))+
theme_bw()+
theme(axis.text.x = element_text(angle = 70, hjust = 1))+
ggtitle(paste0('Square: first clone, circle: second clone\nThreshold for presence (abs exposure): ', thres2))+
labs(x='', y='')
ggplot()+
geom_point(data = all_presence_abs[all_presence_abs$Var2 == 'Clonal',],#[all_presence_abs$value,],
aes(x=factor(Var1, levels=order_sigs), y=L1,
col=log(value.1), size=3), shape=15)+
geom_point(data = all_presence_abs[all_presence_abs$Var2 == 'Subclonal',],#[all_presence_abs$value,],
aes(x=factor(Var1, levels=order_sigs), y=L1,
col=log(value.1), size=3), shape=20)+
+scale_color_continuous(na.value="white")+
#scale_color_manual(values=c("#ffffff", "#000000"))+
theme_bw()+
theme(axis.text.x = element_text(angle = 70, hjust = 1))+
ggtitle(paste0('Square: first clone, circle: second clone\nThreshold for presence (abs exposure): ', thres2))+
labs(x='', y='')
ggplot()+
geom_point(data = all_presence_abs[all_presence_abs$Var2 == 'Clonal',],#[all_presence_abs$value,],
aes(x=factor(Var1, levels=order_sigs), y=L1,
col=log(value.1), size=3), shape=15)+
geom_point(data = all_presence_abs[all_presence_abs$Var2 == 'Subclonal',],#[all_presence_abs$value,],
aes(x=factor(Var1, levels=order_sigs), y=L1,
col=log(value.1), size=3), shape=20)+
scale_color_continuous(na.value="white")+
#scale_color_manual(values=c("#ffffff", "#000000"))+
theme_bw()+
theme(axis.text.x = element_text(angle = 70, hjust = 1))+
ggtitle(paste0('Square: first clone, circle: second clone\nThreshold for presence (abs exposure): ', thres2))+
labs(x='', y='')
all_files <- list.files(outfolder)[1:30]
all_files <- all_files[grepl('merged', all_files)]
all_objs <- list()
for(i in paste0(objectfolder, getname(all_files), '.RDS')){
print(i)
try(all_objs[[getname2(i)]] <- readRDS(i))
}
thres2 <- 0
all_presence_abs <- lapply(names(all_objs), try(function(samplename, thres=thres2){
#print(samplename)
.ccfs <- sapply(rownames(all_objs[[samplename]][[1]][[1]]), function(i){
.x <- strsplit(i, ',')[[1]][1]
as.numeric(substr(.x, 2, nchar(.x)))
})
.clonal <- all_objs[[samplename]][[1]][[1]][.ccfs >= 1,]
.subclonal <- all_objs[[samplename]][[1]][[1]][.ccfs < 1,]
if(!is.null(nrow(.clonal))) .clonal <- colSums(.clonal)
if(!is.null(nrow(.subclonal))) .subclonal <- colSums(.subclonal)
.cols1 <- sapply(list(.clonal, .subclonal), function(i) i > thres); colnames(.cols1) <- c('Clonal', 'Subclonal')
.cols2 <- cbind(.clonal, .subclonal); colnames(.cols2) <- c('Clonal_Num', 'Subclonal_Num')
.x <- cbind.data.frame(melt(.cols1), melt(.cols2))
.x <- .x[,-c(4,5)]
.x
}))
names(all_presence_abs) <- names(all_objs)
all_presence_abs <- melt(all_presence_abs, id.vars = c('Var1', 'Var2', 'value', 'value.1'))
order_sigs <- levels(all_presence_abs$Var1)
order_samples <- dcast(all_presence_abs[,-4], formula = L1~Var1+Var2)
rownamessamples <- order_samples[,1]; order_samples <- order_samples[,-1]
order_samples <- apply(order_samples, 2, as.numeric)
rownames(order_samples) <- rownamessamples
order_samples <- order_samples[order(rowSums(order_samples), decreasing = FALSE),]
#all_presence_abs <- all_presence_abs[all_presence_abs$value,]
all_presence_abs$L1 <- factor(all_presence_abs$L1, levels=rownames(order_samples))
ggplot()+
geom_point(data = all_presence_abs[all_presence_abs$Var2 == 'Clonal',],#[all_presence_abs$value,],
aes(x=factor(Var1, levels=order_sigs), y=L1,
col=log(value.1), size=3), shape=15)+
geom_point(data = all_presence_abs[all_presence_abs$Var2 == 'Subclonal',],#[all_presence_abs$value,],
aes(x=factor(Var1, levels=order_sigs), y=L1,
col=log(value.1), size=3), shape=20)+
scale_color_continuous(na.value="white")+
#scale_color_manual(values=c("#ffffff", "#000000"))+
theme_bw()+
theme(axis.text.x = element_text(angle = 70, hjust = 1))+
ggtitle(paste0('Square: first clone, circle: second clone\nThreshold for presence (abs exposure): ', thres2))+
labs(x='', y='')
all_files <- list.files(outfolder)[1:100]
all_files <- all_files[grepl('merged', all_files)]
all_objs <- list()
for(i in paste0(objectfolder, getname(all_files), '.RDS')){
print(i)
try(all_objs[[getname2(i)]] <- readRDS(i))
}
thres2 <- 0
all_presence_abs <- lapply(names(all_objs), try(function(samplename, thres=thres2){
#print(samplename)
.ccfs <- sapply(rownames(all_objs[[samplename]][[1]][[1]]), function(i){
.x <- strsplit(i, ',')[[1]][1]
as.numeric(substr(.x, 2, nchar(.x)))
})
.clonal <- all_objs[[samplename]][[1]][[1]][.ccfs >= 1,]
.subclonal <- all_objs[[samplename]][[1]][[1]][.ccfs < 1,]
if(!is.null(nrow(.clonal))) .clonal <- colSums(.clonal)
if(!is.null(nrow(.subclonal))) .subclonal <- colSums(.subclonal)
.cols1 <- sapply(list(.clonal, .subclonal), function(i) i > thres); colnames(.cols1) <- c('Clonal', 'Subclonal')
.cols2 <- cbind(.clonal, .subclonal); colnames(.cols2) <- c('Clonal_Num', 'Subclonal_Num')
.x <- cbind.data.frame(melt(.cols1), melt(.cols2))
.x <- .x[,-c(4,5)]
.x
}))
names(all_presence_abs) <- names(all_objs)
all_presence_abs <- melt(all_presence_abs, id.vars = c('Var1', 'Var2', 'value', 'value.1'))
order_sigs <- levels(all_presence_abs$Var1)
order_samples <- dcast(all_presence_abs[,-4], formula = L1~Var1+Var2)
rownamessamples <- order_samples[,1]; order_samples <- order_samples[,-1]
order_samples <- apply(order_samples, 2, as.numeric)
rownames(order_samples) <- rownamessamples
order_samples <- order_samples[order(rowSums(order_samples), decreasing = FALSE),]
#all_presence_abs <- all_presence_abs[all_presence_abs$value,]
all_presence_abs$L1 <- factor(all_presence_abs$L1, levels=rownames(order_samples))
ggplot()+
geom_point(data = all_presence_abs[all_presence_abs$Var2 == 'Clonal',],#[all_presence_abs$value,],
aes(x=factor(Var1, levels=order_sigs), y=L1,
col=log(value.1), size=3), shape=15)+
geom_point(data = all_presence_abs[all_presence_abs$Var2 == 'Subclonal',],#[all_presence_abs$value,],
aes(x=factor(Var1, levels=order_sigs), y=L1,
col=log(value.1), size=3), shape=20)+
scale_color_continuous(na.value="white")+
#scale_color_manual(values=c("#ffffff", "#000000"))+
theme_bw()+
theme(axis.text.x = element_text(angle = 70, hjust = 1))+
ggtitle(paste0('Square: first clone, circle: second clone\nThreshold for presence (abs exposure): ', thres2))+
labs(x='', y='')
all_files <- list.files(outfolder)[1:100]
all_files <- all_files[grepl('merged', all_files)]
all_objs <- list()
for(i in paste0(objectfolder, getname(all_files), '.RDS')){
print(i)
try(all_objs[[getname2(i)]] <- readRDS(i))
}
thres2 <- 0
all_presence_abs <- lapply(names(all_objs), try(function(samplename, thres=thres2){
#print(samplename)
.ccfs <- sapply(rownames(all_objs[[samplename]][[1]][[1]]), function(i){
.x <- strsplit(i, ',')[[1]][1]
as.numeric(substr(.x, 2, nchar(.x)))
})
.clonal <- all_objs[[samplename]][[1]][[1]][.ccfs >= 1,]
.subclonal <- all_objs[[samplename]][[1]][[1]][.ccfs < 1,]
if(!is.null(nrow(.clonal))) .clonal <- colSums(.clonal)
if(!is.null(nrow(.subclonal))) .subclonal <- colSums(.subclonal)
.cols1 <- sapply(list(.clonal, .subclonal), function(i) i > thres); colnames(.cols1) <- c('Clonal', 'Subclonal')
.cols2 <- cbind(.clonal, .subclonal); colnames(.cols2) <- c('Clonal_Num', 'Subclonal_Num')
.x <- cbind.data.frame(melt(.cols1), melt(.cols2))
.x <- .x[,-c(4,5)]
.x
}))
names(all_presence_abs) <- names(all_objs)
all_presence_abs <- melt(all_presence_abs, id.vars = c('Var1', 'Var2', 'value', 'value.1'))
order_sigs <- levels(all_presence_abs$Var1)
order_samples <- dcast(all_presence_abs[,-4], formula = L1~Var1+Var2)
rownamessamples <- order_samples[,1]; order_samples <- order_samples[,-1]
order_samples <- apply(order_samples, 2, as.numeric)
rownames(order_samples) <- rownamessamples
order_samples <- order_samples[order(rowSums(order_samples), decreasing = TRUE),]
#all_presence_abs <- all_presence_abs[all_presence_abs$value,]
all_presence_abs$L1 <- factor(all_presence_abs$L1, levels=rownames(order_samples))
ggplot()+
geom_point(data = all_presence_abs[all_presence_abs$Var2 == 'Clonal',],#[all_presence_abs$value,],
aes(x=factor(Var1, levels=order_sigs), y=L1,
col=log(value.1), size=3), shape=15)+
geom_point(data = all_presence_abs[all_presence_abs$Var2 == 'Subclonal',],#[all_presence_abs$value,],
aes(x=factor(Var1, levels=order_sigs), y=L1,
col=log(value.1), size=3), shape=20)+
scale_color_continuous(na.value="white")+
#scale_color_manual(values=c("#ffffff", "#000000"))+
theme_bw()+
theme(axis.text.x = element_text(angle = 70, hjust = 1))+
ggtitle(paste0('Square: first clone, circle: second clone\nThreshold for presence (abs exposure): ', thres2))+
labs(x='', y='')
all_files <- list.files(outfolder)
all_files <- all_files[grepl('merged', all_files)]
all_objs <- list()
for(i in paste0(objectfolder, getname(all_files), '.RDS')){
print(i)
try(all_objs[[getname2(i)]] <- readRDS(i))
}
thres2 <- 0
all_presence_abs <- lapply(names(all_objs), try(function(samplename, thres=thres2){
#print(samplename)
.ccfs <- sapply(rownames(all_objs[[samplename]][[1]][[1]]), function(i){
.x <- strsplit(i, ',')[[1]][1]
as.numeric(substr(.x, 2, nchar(.x)))
})
.clonal <- all_objs[[samplename]][[1]][[1]][.ccfs >= 1,]
.subclonal <- all_objs[[samplename]][[1]][[1]][.ccfs < 1,]
if(!is.null(nrow(.clonal))) .clonal <- colSums(.clonal)
if(!is.null(nrow(.subclonal))) .subclonal <- colSums(.subclonal)
.cols1 <- sapply(list(.clonal, .subclonal), function(i) i > thres); colnames(.cols1) <- c('Clonal', 'Subclonal')
.cols2 <- cbind(.clonal, .subclonal); colnames(.cols2) <- c('Clonal_Num', 'Subclonal_Num')
.x <- cbind.data.frame(melt(.cols1), melt(.cols2))
.x <- .x[,-c(4,5)]
.x
}))
names(all_presence_abs) <- names(all_objs)
all_presence_abs <- melt(all_presence_abs, id.vars = c('Var1', 'Var2', 'value', 'value.1'))
order_sigs <- levels(all_presence_abs$Var1)
order_samples <- dcast(all_presence_abs[,-4], formula = L1~Var1+Var2)
rownamessamples <- order_samples[,1]; order_samples <- order_samples[,-1]
order_samples <- apply(order_samples, 2, as.numeric)
rownames(order_samples) <- rownamessamples
order_samples <- order_samples[order(rowSums(order_samples), decreasing = TRUE),]
#all_presence_abs <- all_presence_abs[all_presence_abs$value,]
all_presence_abs$L1 <- factor(all_presence_abs$L1, levels=rownames(order_samples))
ggplot()+
geom_point(data = all_presence_abs[all_presence_abs$Var2 == 'Clonal',],#[all_presence_abs$value,],
aes(x=factor(Var1, levels=order_sigs), y=L1,
col=log(value.1), size=3), shape=15)+
geom_point(data = all_presence_abs[all_presence_abs$Var2 == 'Subclonal',],#[all_presence_abs$value,],
aes(x=factor(Var1, levels=order_sigs), y=L1,
col=log(value.1), size=3), shape=20)+
scale_color_continuous(na.value="white")+
#scale_color_manual(values=c("#ffffff", "#000000"))+
theme_bw()+
theme(axis.text.x = element_text(angle = 70, hjust = 1))+
ggtitle(paste0('Square: first clone, circle: second clone\nThreshold for presence (abs exposure): ', thres2))+
labs(x='', y='')
ggsave(paste0("../../results/clonal_structure/presence_absence_sigs_clonalsubclonal_thres", thres2, "_allsamps.pdf"),
width = 11, height = 350, limitsize = FALSE)
## Comparing equidistant and equisized binning in PCAWG samples -- analysis (2/2)
rm(list = ls())
setwd(dirname(rstudioapi::getSourceEditorContext()$path))
Sys.setenv(LANG='en')
library(CompSign)
source("../../code/binning_functions.R")
source("../../code/plotting.R")
source("helper_functions_pcawg.R")
library(gridExtra)
library(reshape2)
library(ggplot2)
## read in interesting samples
interesting_samples <- read.table("interesting_samples.txt", stringsAsFactors=FALSE)
interesting_samples_comments <- readLines("interesting_samples.txt")
cat(interesting_samples_comments[!grepl("sample", interesting_samples_comments)])
## read in
outfolder <- "/Users/morril01/Documents/PhD/CDA_in_Cancer/out/ProjectSubtractingExposures/"
objectfolder <- "../../out/pcawg_objects/signatures_binning/"
outfiles= interesting_samples$V2
outfiles <- paste0(outfolder, 'out_', outfiles, '.consensus.20160830.somatic.snv_mnv.vcf_merged')
outfiles <- gsub("-", "-", outfiles)
## Functions
getname <- function(j)  gsub("−", "-", gsub('out_', '', gsub('.consensus.20160830.somatic.snv_mnv.vcf_merged', '', gsub(outfolder, '', j))))
getname2 <- function(j) gsub("−", "-", gsub(objectfolder, '', gsub('.RDS', '', gsub(outfolder, '', j))))
givefile <- function(j) paste0(outfolder, 'out_', j, '.consensus.20160830.somatic.snv_mnv.vcf_merged')
objs <- list()
for(i in paste0(objectfolder, getname(outfiles), '.RDS')){
objs[[getname2(i)]] <- readRDS(i)
}
all_files <- list.files(outfolder)
all_files <- all_files[grepl('merged', all_files)]
all_objs <- list()
for(i in paste0(objectfolder, getname(all_files), '.RDS')){
print(i)
try(all_objs[[getname2(i)]] <- readRDS(i))
}
thres2 <- 0
all_presence_abs <- lapply(names(all_objs), try(function(samplename, thres=thres2){
#print(samplename)
.ccfs <- sapply(rownames(all_objs[[samplename]][[1]][[1]]), function(i){
.x <- strsplit(i, ',')[[1]][1]
as.numeric(substr(.x, 2, nchar(.x)))
})
.clonal <- all_objs[[samplename]][[1]][[1]][.ccfs >= 1,]
.subclonal <- all_objs[[samplename]][[1]][[1]][.ccfs < 1,]
if(!is.null(nrow(.clonal))) .clonal <- colSums(.clonal)
if(!is.null(nrow(.subclonal))) .subclonal <- colSums(.subclonal)
.cols1 <- sapply(list(.clonal, .subclonal), function(i) i > thres); colnames(.cols1) <- c('Clonal', 'Subclonal')
.cols2 <- cbind(.clonal, .subclonal); colnames(.cols2) <- c('Clonal_Num', 'Subclonal_Num')
.x <- cbind.data.frame(melt(.cols1), melt(.cols2))
.x <- .x[,-c(4,5)]
.x
}))
names(all_presence_abs) <- names(all_objs)
all_presence_abs <- melt(all_presence_abs, id.vars = c('Var1', 'Var2', 'value', 'value.1'))
all_presence_abs$L1 <- factor(all_presence_abs$L1, levels=rownames(order_samples))
order_sigs <- levels(all_presence_abs$Var1)
order_samples <- dcast(all_presence_abs[,-4], formula = L1~Var1+Var2)
rownamessamples <- order_samples[,1]; order_samples <- order_samples[,-1]
order_samples <- apply(order_samples, 2, as.numeric)
rownames(order_samples) <- rownamessamples
order_samples <- order_samples[order(rowSums(order_samples), decreasing = TRUE),]
all_presence_abs$L1 <- factor(all_presence_abs$L1, levels=rownames(order_samples))
all_presence_abs
all_presence_abs_dcast <- dcast(all_presence_abs_dcast, formula = L1~Var1+Var2)
all_presence_abs_dcast <- dcast(all_presence_abs, formula = L1~Var1+Var2)
head(all_presence_abs_dcast)
all_presence_abs_dcast <- dcast(all_presence_abs[,-4], formula = L1~Var1+Var2)
head(all_presence_abs_dcast)
rownames(all_presence_abs_dcast) <- all_presence_abs_dcast[,1]; all_presence_abs_dcast <- all_presence_abs_dcast[,-1]
all_presence_abs_dcast
image(all_presence_abs_dcast)
image(as.matrix(all_presence_abs_dcast))
prcomp_presence_abs <- prcomp(as.matrix(all_presence_abs_dcast))
prcomp_presence_abs
plot(prcomp_presence_abs$x[,1:2])
source("../../../../CDA_in_Cancer/code/functions/basic_functions.R")
plotPCA(as.matrix(all_presence_abs_dcast))
plot(prcomp_presence_abs$x[,1:2])
plotPCA(as.matrix(all_presence_abs_dcast))
plotPCA(as.matrix(all_presence_abs_dcast), center = TRUE, scale = TRUE)
plotPCA(as.matrix(all_presence_abs_dcast), center = FALSE, scale = TRUE)
plotPCA(as.matrix(all_presence_abs_dcast), center = TRUE, scale = TRUE)
plotPCA(as.matrix(all_presence_abs_dcast), center = FALSE, scale = TRUE)
plotPCA(as.matrix(all_presence_abs_dcast), center = TRUE, scale = FALSE)
plotPCA(as.matrix(all_presence_abs_dcast), center = FALSE, scale = FALSE)
par(mfrow=c(2,2))
plotPCA(as.matrix(all_presence_abs_dcast), center = TRUE, scale = TRUE)
plotPCA(as.matrix(all_presence_abs_dcast), center = FALSE, scale = TRUE)
plotPCA(as.matrix(all_presence_abs_dcast), center = TRUE, scale = FALSE)
plotPCA(as.matrix(all_presence_abs_dcast), center = FALSE, scale = FALSE)
pcawg_data <- read.table("../../../../CDA_in_Cancer/data/pcawg/repository_1567600367.tsv", stringsAsFactors = FALSE, sep = '\t', header = T)
pcawg_data <- pcawg_data[!duplicated(pcawg_data$Specimen.ID),]
pcawg_data <- pcawg_data[order(pcawg_data$Project),]
names(all_objs)
mtch <- match(gsub("\\..*","",pcawg_data$File.Name), names(all_objs))
mtch
cancer_types <- sapply(names(all_objs), function(i) pcawg_data[grep(i, pcawg_data$File.Name),][1,'Project']) ## not optimal; v slow
names(cancer_types) <- names(all_objs)
head(cancer_types)
length(cancer_types)
length(all_objs)
plotPCA(as.matrix(all_presence_abs_dcast), center = TRUE, scale = TRUE, col=cancer_types)
plotPCA(as.matrix(all_presence_abs_dcast), center = TRUE, scale = TRUE, col=factor(cancer_types))
dev.off()
par(mfrow=c(2,2))
plotPCA(as.matrix(all_presence_abs_dcast), center = TRUE, scale = TRUE, col=factor(cancer_types))
plotPCA(as.matrix(all_presence_abs_dcast), center = FALSE, scale = TRUE, col=factor(cancer_types))
plotPCA(as.matrix(all_presence_abs_dcast), center = TRUE, scale = FALSE, col=factor(cancer_types))
plotPCA(as.matrix(all_presence_abs_dcast), center = FALSE, scale = FALSE, col=factor(cancer_types))
