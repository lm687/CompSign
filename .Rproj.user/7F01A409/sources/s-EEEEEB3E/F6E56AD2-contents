#############################
# Compositional data with R #
#############################
rm(list = ls())

## Create dummy dataset and perform all analyses from
## the book

library(compositions)
library(MCMCpack)

dat <- rdirichlet(1000, rep(1,5))
dat <- cbind(dat, dat[,1] + runif(1000)*10)
dat <- sweep(dat, 1, rowSums(dat), '/')
plot(acomp(dat[,c(1:3, 6)]), pch=19, cex=0.1)

## Harker diagrams
pairs(acomp(dat), pch=10, cex=0.2)

plot3D(acomp(dat[,c(1,3,6)]))

### Distributions
## ?dnorm.acomp

rn <- rnorm.acomp(n = 4e4,
                  mean = acomp(c(1:3)),
                  var = ilrvar2clr(matrix(c(2, -1.5, -1.5, 2), ncol=2)))
plot(rn, pch=19, cex=0.1, col=alpha('black', 0.02))

dn <- dnorm.acomp(x = rn, mean =  c(1,1,2),
            var = matrix(c( 0.2,0.1,0.0,
                            0.1,0.2,0.0,
                            0.0,0.0,0.2),byrow=TRUE,nrow=3)
            )
plot(dn, pch=19, cex=0.1, col=alpha('black', 0.02))

## testing for normality
qqnorm.acomp(dat, pch=19, cex=0.2)
## alternative: test based on SVD
par(mfrow=c(2,3))
apply(svd(clr(dat))$u, 2, function(x) plot(density(x)))

## plotting a scalar funtion of a composition
library(gtools)
opar <- par(mar=c(3,3,1,1))
myalpha <- 1:3+1
plot(acomp(myalpha), pch="")
aux <- seq(from=0, to=1, by=0.01)
myx <- expand.grid(x=aux,y=aux)
c60 <- cos(pi/3)
s60 <- sin(pi/3)

myfun <- function(x){
  y <- c(x[1]-x[2]*c60/s60, x[2]/s60)
  y <- c(1-sum(y), y)
  dd <- ifelse(any(y<0), NA, ddirichlet(y, alpha=myalpha))
  return(dd)
}
dx <- apply(myx, 1, myfun)
dim(dx) <- c(101, 101)
contour(dx, asp=1, add=TRUE, col='grey')
par(opar)

## testing for dir distrib

## Aitchison distribution
## generalisation of both dir and additive logistic normal


## double stochastic count distributions
vr <- ilrvar2clr(diag(2))
x1 <- rAitchison(10, theta = c(1,1,1),
                 sigma = vr)
rpois.ccomp(nrow(x1), x1, lambda=80)
rmc <- rmultinom.ccomp(nrow(x1), x1, N=80)
dx <- apply(rmc, 1, funxtion(x) dmultinom(x, size=10, prob=clo(...)))
plot()

