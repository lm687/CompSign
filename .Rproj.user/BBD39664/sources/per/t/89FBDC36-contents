rm(list = ls())
require(MCMCpack)
require(NMF)
require(fields)

## three signatures
rnk <- 3
## a is matrix to deconvolute
a <- MCMCpack::rdirichlet(10, c(0.2, 0.4, 0.4))
## NMF
deconv <- NMF::nmf(a, rank = rnk)
fitted(deconv)

## w is exposures
w <- basis(deconv)
## h is signatures
h <- coef(deconv)

all(w == deconv@fit@W) & all(h == deconv@fit@H)

all( (w %*% h) == fitted(deconv) )

## we wish rowSums of the signature matrix to add up to the unit, as it's probabilities
norm_mat <- diag(1/rowSums(h))
norm_mat2 <- diag(rowSums(h))
par(mfrow=c(1,2))
all.equal(fitted(deconv), w %*% norm_mat2 %*% norm_mat %*% h)
#' now we have a re-scaled signature matrix (norm_mat %*% h)
#' and a re-scaled exposures matrix (w %*% norm_mat2)
image(w %*% norm_mat2 %*% norm_mat %*% h)
image(a)

## signatures: matrix of rowsums one, i.e. proper signature definition
sig <- (norm_mat %*% h)

## exposures: re-scaled after normalising the signatures matrix
exp <- (w %*% norm_mat2)

all.equal(fitted(deconv), exp %*% sig)

par(mfrow=c(1,2))
image(w)
image(exp)

## is the exposures matrix normalised either
## way the same?

# ## normalised exposure matrix (crude)
# norm_w_1 <- sweep(w, 2, colSums(w), '/')
# ## normalised exposure matrix (correct)
# norm_w_2 <- sweep(w %*% norm_mat2,
#       2, colSums(w %*% norm_mat2), '/')
# ## both are the same
# all.equal(norm_w_1, norm_w_2)


## EXPOSURE SHOULD BE NORMALISED ROWWISE!
## normalised exposure matrix (crude)
norm_w_1 <- sweep(w, 1, rowSums(w), '/')
## normalised exposure matrix (correct)
norm_w_2 <- sweep(w %*% norm_mat2,
                  1, rowSums(w %*% norm_mat2), '/')
## both are the same
all.equal(norm_w_1, norm_w_2)
image.plot(norm_w_1)
image.plot(norm_w_2)
